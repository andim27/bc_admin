image: bulich/builder

stages:
- build
- deploy
- merge

variables:
  CONTAINER_REGISTRY: registry.ooo.ua


before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  

build_dev:
  stage: build
  only:
    - dev
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - vendor/
  script:    
    - composer install --ignore-platform-reqs
    - ./pre-admin.sh
    - docker info
    - cp config/params.dev config/params.php
    - cp config/web.dev config/web.php
    - docker build -t $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:latest .
    - docker tag $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:latest $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - docker push $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - ./post-admin.sh

build_stage:
  stage: build
  only:
    - master
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - vendor/
  script:
    - composer install --ignore-platform-reqs
    - ./pre-admin.sh
    - docker info
    - cp config/params.prod config/params.php
    - cp config/web.prod config/web.php
    - docker build -t $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:latest .
    - docker tag $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:latest $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - docker push $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - ./post-admin.sh

merge_to_stage:
  image: bulich/dind
  stage: merge
  only:
    - dev
  when: manual
  script:
    - HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} GITLAB_USER_ID=${GITLAB_USER_ID} PRIVATE_TOKEN=${PRIVATE_TOKEN} ./utils/autoMergeRequest.sh

deploy_dev:
    image: registry.gitlab.com/gitlab-examples/kubernetes-deploy
    stage: deploy
    environment:
        name: dev
        url: admin-dev.bpt.ooo.ua
    only:
        - dev    
    script:
        - echo "${KUBE_CA_PEM}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
        - kubectl config use-context default-system                
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml
        - sed -i "s/__ADMIN-REPLICA__/1/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl create -f deployment.yaml || (kubectl delete -f deployment.yaml && kubectl apply -f deployment.yaml)
        - kubectl create -f service.yaml || true

deploy_stage:
    image: registry.gitlab.com/gitlab-examples/kubernetes-deploy
    stage: deploy
    environment:
        name: stage
        url: admin-stage.bpt.ooo.ua
    only:
        - master
    script:
        - echo "${KUBE_CA_PEM}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml
        - sed -i "s/__ADMIN-REPLICA__/1/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl create -f deployment.yaml || (kubectl delete -f deployment.yaml && kubectl apply -f deployment.yaml)
        - kubectl create -f service.yaml || true

deploy_prod:
    image: registry.gitlab.com/gitlab-examples/kubernetes-deploy
    stage: deploy
    environment:
        name: prod
    only:
        - master
    when: manual
    script:
        - echo "${KUBE_CA_PEM}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml
        - sed -i "s/__ADMIN-REPLICA__/10/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml cronjob.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - kubectl cluster-info
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f deployment.yaml
        - kubectl apply -f cronjob.yaml
        - kubectl apply -f service.yaml || true
