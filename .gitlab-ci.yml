image: bulich/builder

stages:
- build
- deploy
- merge
- cache

variables:
  CONTAINER_REGISTRY: eu.gcr.io/bpt-core
  PROD_NS: bpt
  DEV_NS: bpt-dev
  DEV_URL: admin-dev.bpt.ooo.ua
  STAGE_URL: admin-stage.bpt.ooo.ua
  PROD_URL: admin.businessprocess.biz


before_script:
  #- docker login -u oauth2accesstoken -p $REGISTRY_TOKEN $CONTAINER_REGISTRY
  # Install CA certs, openssl to https downloads, python for gcloud sdk
  #- apk add --update make ca-certificates openssl python
  #- update-ca-certificates
  # Write our GCP service account private key into a file
  - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
  # Download and install Google Cloud SDK
  - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
  - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
  - google-cloud-sdk/bin/gcloud --quiet components update
  - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
  - docker login -u _json_key --password-stdin https://eu.gcr.io < ${HOME}/gcloud-service-key.json

build_dev:
  stage: build
  only:
    - dev
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - vendor/
  script:
    - composer install --ignore-platform-reqs
    - mv ./vendor/bower-asset ./vendor/bower/ || true
    - ./pre-admin.sh
    - docker info
    - cp config/params.dev config/params.php
    - cp config/web.dev config/web.php
    - docker build -t $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:latest .
    - docker tag $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:latest $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
    - docker push $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
    - ./post-admin.sh

build_stage:
  stage: build
  only:
    - master
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - vendor/
  script:
    - composer install --ignore-platform-reqs
    - mv ./vendor/bower-asset ./vendor/bower/ || true
    - ./pre-admin.sh
    - docker info
    - cp config/params.prod config/params.php
    - cp config/web.prod config/web.php
    - docker build -t $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:latest .
    - docker tag $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:latest $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - docker push $CONTAINER_REGISTRY/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - ./post-admin.sh

merge_to_stage:
  image: bulich/dind
  stage: merge
  only:
    - dev
  when: manual
  script:
    - HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} GITLAB_USER_ID=${GITLAB_USER_ID} PRIVATE_TOKEN=${PRIVATE_TOKEN} ./utils/autoMergeRequest.sh

deploy_dev:
#    image: registry.gitlab.com/gitlab-examples/kubernetes-deploy
    stage: deploy
    environment:
        name: dev
        url: admin-dev.bpt.ooo.ua
    only:
        - dev
    script:
        - echo "${KUBE_CA_PEM}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml ingress.yaml
        - sed -i "s/__ADMIN-REPLICA__/1/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__URL__/$DEV_URL/" ingress.yaml
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f ingress.yaml
        - kubectl create -f deployment.yaml || (kubectl delete -f deployment.yaml && kubectl apply -f deployment.yaml)
        - kubectl create -f service.yaml || true

deploy_stage:
    image: registry.gitlab.com/gitlab-examples/kubernetes-deploy
    stage: deploy
    environment:
        name: stage
        url: admin-stage.bpt.ooo.ua
    only:
        - master
    script:
        - echo "${KUBE_CA_PEM}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml ingress.yaml
        - sed -i "s/__ADMIN-REPLICA__/1/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__URL__/$STAGE_URL/" ingress.yaml
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f ingress.yaml
        - kubectl create -f deployment.yaml || (kubectl delete -f deployment.yaml && kubectl apply -f deployment.yaml)
        - kubectl create -f service.yaml || true

deploy_prod:
    image: registry.gitlab.com/gitlab-examples/kubernetes-deploy
    stage: deploy
    environment:
        name: prod
    only:
        - master
    when: manual
    script:
        - echo "${KUBE_CA_PEM}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace ${KUBE_NAMESPACE}
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml ingress.yaml
        - sed -i "s/__ADMIN-REPLICA__/3/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__URL__/$PROD_URL/" ingress.yaml
        - kubectl cluster-info
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f ingress.yaml
        - kubectl apply -f deployment.yaml
        - kubectl apply -f service.yaml || true

clear_cache:
    image: bulich/dind
    stage: cache
    environment:
        name: prod
    only:
        - master
    script:
        - ./clear-cache.sh
