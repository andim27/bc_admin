image: bulich/builder

stages:
- build
- deploy
- cache

variables:
  CONTAINER_REGISTRY: eu.gcr.io/bpt-core
  PROD_NS: bpt
  DEV_NS: bpt
  DEV_URL: admin-dev.bpt.ooo.ua
  STAGE_URL: admin-stage.bpt.ooo.ua
  PROD_URL: admin.businessprocess.biz
  API_DEV_URL: bpt-api-dev
  API_PROD_URL: bpt-api-prod
  MONGO_DEV: '10.10.1.9gnc'
  MONGO_PROD: 'gnc:b41uHcdR@bpt-gke-shard-00-00-ezdfa.gcp.mongodb.net:27017,bpt-gke-shard-00-01-ezdfa.gcp.mongodb.net:27017,bpt-gke-shard-00-02-ezdfa.gcp.mongodb.net:27017/gnc?ssl=true&sslWeakCertificateValidation=true&replicaSet=BPT-GKE-shard-0&authSource=admin'


before_script:
  # Write our GCP service account private key into a file
  - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
  # Download and install Google Cloud SDK
  - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
  - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
  - google-cloud-sdk/bin/gcloud --quiet components update
  - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
  - docker login -u _json_key --password-stdin https://eu.gcr.io < ${HOME}/gcloud-service-key.json

build:
  stage: build
  only:
    - master
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - vendor/
  script:
    - composer install --ignore-platform-reqs
    - mv ./vendor/bower-asset ./vendor/bower/ || true
    - docker info
    - docker pull bulich/php7lx:latest
    - docker build -t $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:latest .
    - docker tag $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:latest $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
    - docker push $CONTAINER_REGISTRY/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}

deploy_dev:
    stage: deploy
    environment:
        name: dev
    only:
        - master
    script:
        - echo "${API_CA_DEV}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${API_URL_DEV} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${API_TOKEN_DEV}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace $PROD_NS
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml ingress.yaml
        - sed -i "s/__ADMIN-REPLICA__/1/" deployment.yaml
        - sed -i "s/__API_URL__/$API_DEV_URL/" deployment.yaml
        - sed -i "s/__MONGO_URI__/$MONGO_DEV/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__URL__/$DEV_URL/" ingress.yaml
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f ingress.yaml
        - kubectl create -f deployment.yaml || (kubectl delete -f deployment.yaml && kubectl apply -f deployment.yaml)
        - kubectl create -f service.yaml || true

deploy_stage:
    stage: deploy
    environment:
        name: stage
    only:
        - master
    when: manual
    script:
        - echo "${API_CA_PROD}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${API_URL_PROD} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${API_TOKEN_PROD}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace $PROD_NS
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml ingress.yaml
        - sed -i "s/__ADMIN-REPLICA__/1/" deployment.yaml
        - sed -i "s/__API_URL__/$API_DEV_URL/" deployment.yaml
        - sed -i "s/__MONGO_URI__/$MONGO_PROD/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__URL__/$STAGE_URL/" ingress.yaml
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f ingress.yaml
        - kubectl create -f deployment.yaml || (kubectl delete -f deployment.yaml && kubectl apply -f deployment.yaml)
        - kubectl create -f service.yaml || true

deploy_prod:
    stage: deploy
    environment:
        name: prod
    only:
        - master
    when: manual
    script:
        - echo "${API_CA_PROD}" > kube_ca.pem
        - kubectl config set-cluster default-cluster --server=${API_URL_PROD} --certificate-authority="$(pwd)/kube_ca.pem"
        - kubectl config set-credentials default-admin --token=${API_TOKEN_PROD}
        - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace $PROD_NS
        - kubectl config use-context default-system
        - cd kube
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml service.yaml ingress.yaml
        - sed -i "s/__ADMIN-REPLICA__/6/" deployment.yaml
        - sed -i "s/__API_URL__/$API_DEV_URL/" deployment.yaml
        - sed -i "s/__MONGO_URI__/$MONGO_DEV/" deployment.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__COMMIT__/${CI_COMMIT_SHA}/" deployment.yaml service.yaml
        - sed -i "s/__URL__/$PROD_URL/" ingress.yaml
        - kubectl cluster-info
        - kubectl get deployments -l name=bpt-admin-${CI_ENVIRONMENT_SLUG}
        - kubectl apply -f ingress.yaml
        - kubectl apply -f deployment.yaml
        - kubectl apply -f service.yaml || true

clear_cache:
    image: bulich/dind
    stage: cache
    environment:
        name: prod
    only:
        - master
    script:
        - ./clear-cache.sh
